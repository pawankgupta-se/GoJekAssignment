apply plugin: 'com.android.application'

def static getBuildTime() {
    return new Date().format("yyyy-MM-dd_HH-mm")
}

def getGitCommitHash() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (ignored) {
        return 1
    }
}

def getGitCommitCount() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--count', 'develop'
            standardOutput = stdout
        }
        return stdout.toString().trim().toInteger()
    } catch (ignored) {
        return 1
    }
}

def getGitLatestTag() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--abbrev=0'
            standardOutput = stdout
        }
        def tagArray = stdout.toString().trim().tokenize(".")
        def newPatch = tagArray.get(tagArray.size() - 1).toInteger() + 1

        def versionName = ""
        for(int i = 0; i < tagArray.size() - 1; i++) {
            versionName = versionName + tagArray.get(i) + "."
        }
        versionName = versionName + newPatch

        return versionName
    } catch (ignored) {
        return "v0.0.1"
    }
}


def config = [
        package          : "com.assignment.gojek",
        testApplicationId: "com.assignment.gojek.test",
        compileSdkVersion: 28,
        targetSdkVersion : 28,
        minSdkVersion    : 19,
        buildToolsVersion: "27.0.3",
        apkBaseName      : "GoJekAssignment_" + getBuildTime() + "_" + getGitCommitHash()
]

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId config.package
        testApplicationId config.testApplicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode getGitCommitCount()
        versionName getGitLatestTag()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        dev {
            storeFile file("${project.rootDir}/keystores/gojekassignment_dev.jks")
            storePassword propOrEmpty('STORE_PASSWORD')
            keyAlias 'gojekassignment_dev'
            keyPassword propOrEmpty('KEY_PASSWORD')
        }

        qa {
            storeFile file("${project.rootDir}/keystores/gojekassignment_qa.jks")
            storePassword propOrEmpty('STORE_PASSWORD')
            keyAlias 'gojekassignment_qa'
            keyPassword propOrEmpty('KEY_PASSWORD')
        }
        
        prod {
            storeFile file('${project.rootDir}/keystores/gojekassignment_prod.jks')
            storePassword propOrEmpty('STORE_PASSWORD')
            keyAlias 'gojekassignment_prod'
            keyPassword propOrEmpty('KEY_PASSWORD')

        }
    }

    flavorDimensions "track"

    productFlavors {
        dev {
            dimension "track"
            applicationIdSuffix ".dev"
            signingConfig signingConfigs.dev
            buildConfigField "String", "BASE_URL", "\"https://gh-trending-api.herokuapp.com/\""
        }
        qa {
            dimension "track"
            applicationIdSuffix ".qa"
            signingConfig signingConfigs.qa
            buildConfigField "String", "BASE_URL", "\"https://gh-trending-api.herokuapp.com/\""
        }
        prod {
            dimension "track"
            signingConfig signingConfigs.prod
            buildConfigField "String", "BASE_URL", "\"https://gh-trending-api.herokuapp.com/\""
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            manifestPlaceholders = [CRASHLYTICS_ENABLED: true]
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            manifestPlaceholders = [CRASHLYTICS_ENABLED: false]
        }
    }

    dataBinding {
        enabled true
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def libs =  [
    supportVersion: "28.0.0",
    timber:         "5.0.1",
    retrofit:       "2.9.0",
    retrofitGson:   "2.3.0",
    gson:           "2.9.0",
    okhttp:         "4.9.3",
    okhttpLogging:  "4.9.3",
    annotation:     "3.1.1",
    leakCanary:     "1.6.3",
    mockito:        "2.7.1",
    supportTest:    "1.0.2",
    junit:          "4.13.2",
    espresso:       "3.0.2",
    dagger:         "2.44",
    glide:          "4.13.1",
    room:           "1.1.1",
    firebase:       "20.1.0",
    crashlytics:    "2.10.1",
    constraintLayout: "2.0.4",
    viewModel:      "1.1.1",
    cardIO : "5.5.1"
]
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${libs.supportVersion}"
    implementation "com.android.support:design:${libs.supportVersion}"
    implementation "com.android.support.constraint:constraint-layout:${libs.constraintLayout}"
    testImplementation "junit:junit:${libs.junit}"
    androidTestImplementation "com.android.support.test:runner:${libs.supportTest}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${libs.espresso}"
    implementation "com.jakewharton.timber:timber:${libs.timber}"

    annotationProcessor "com.google.dagger:dagger-compiler:${libs.dagger}"
    implementation "com.google.dagger:dagger:${libs.dagger}"

    implementation "com.squareup.retrofit2:retrofit:${libs.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${libs.retrofit}"

    implementation "com.google.code.gson:gson:${libs.gson}"

    implementation "com.squareup.okhttp3:okhttp:${libs.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${libs.okhttpLogging}"


    implementation "com.github.bumptech.glide:glide:${libs.glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${libs.glide}"

    implementation "android.arch.persistence.room:runtime:${libs.room}"
    annotationProcessor "android.arch.persistence.room:compiler:${libs.room}"

    implementation "com.google.firebase:firebase-core:${libs.firebase}"
    implementation "com.crashlytics.sdk.android:crashlytics:${libs.crashlytics}"

    implementation 'com.facebook.shimmer:shimmer:0.5.0@aar'

    //ViewModelProvider
    implementation "android.arch.lifecycle:extensions:${libs.viewModel}"
    implementation "android.arch.lifecycle:viewmodel:${libs.viewModel}"

    //LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${libs.leakCanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${libs.leakCanary}"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${libs.leakCanary}"
}
